{
	"name": "df_silver_llamadas",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_bronze_llamadas",
						"type": "DatasetReference"
					},
					"name": "BronzeLlamadas"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_llamadas",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SelectColumns"
				},
				{
					"name": "SepararLatA"
				},
				{
					"name": "QuitarColumnasViejas"
				},
				{
					"name": "SepararLatB"
				}
			],
			"scriptLines": [
				"source(output(",
				"          servicio as string,",
				"          registro as string,",
				"          numero_a as string,",
				"          imei_a as string,",
				"          rbs_utilizada_a as string,",
				"          celda_a as string,",
				"          latitud_longitud_a as string,",
				"          numero_b as string,",
				"          imei_b as string,",
				"          rbs_utilizada_b as string,",
				"          celda_b as string,",
				"          latitud_longitud_b as string,",
				"          fecha as string,",
				"          duracion as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> BronzeLlamadas",
				"BronzeLlamadas select(mapColumn(",
				"          servicio,",
				"          registro,",
				"          numero_a,",
				"          imei_a,",
				"          rbs_utilizada_a,",
				"          celda_a,",
				"          latitud_longitud_a,",
				"          numero_b,",
				"          imei_b,",
				"          rbs_utilizada_b,",
				"          celda_b,",
				"          latitud_longitud_b,",
				"          fecha,",
				"          duracion",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"SelectColumns derive(latitud_a = toDecimal(split(latitud_longitud_a, ',')[1]),",
				"          longitud_a = toDecimal(split(latitud_longitud_a, ',')[2])) ~> SepararLatA",
				"SepararLatB select(mapColumn(",
				"          servicio,",
				"          registro,",
				"          numero_a,",
				"          imei_a,",
				"          rbs_utilizada_a,",
				"          celda_a,",
				"          numero_b,",
				"          imei_b,",
				"          rbs_utilizada_b,",
				"          celda_b,",
				"          fecha,",
				"          duracion,",
				"          latitud_a,",
				"          longitud_a,",
				"          latitud_b,",
				"          longitud_b",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> QuitarColumnasViejas",
				"SepararLatA derive(latitud_b = toDecimal(split(latitud_longitud_b, ',')[1]),",
				"          longitud_b = toDecimal(split(latitud_longitud_b, ',')[2])) ~> SepararLatB",
				"QuitarColumnasViejas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          servicio as string,",
				"          registro as string,",
				"          numero_a as string,",
				"          imei_a as string,",
				"          rbs_utilizada_a as string,",
				"          celda_a as string,",
				"          latitud_a as decimal(18,0),",
				"          longitud_a as decimal(18,0),",
				"          numero_b as string,",
				"          imei_b as string,",
				"          rbs_utilizada_b as string,",
				"          celda_b as string,",
				"          latitud_b as decimal(18,0),",
				"          longitud_b as decimal(18,0),",
				"          fecha as string,",
				"          duracion as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}