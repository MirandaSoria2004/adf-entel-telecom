{
	"name": "df_silver_datos",
	"properties": {
		"folder": {
			"name": "SILVER"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_sql_bronze_datos",
						"type": "DatasetReference"
					},
					"name": "BronzeDatos"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_sql_silver_datos",
						"type": "DatasetReference"
					},
					"name": "silverDatos"
				}
			],
			"transformations": [
				{
					"name": "SepararLatLong"
				},
				{
					"name": "Convertir"
				},
				{
					"name": "BorrarColumnasViejas"
				}
			],
			"scriptLines": [
				"source(output(",
				"          fecha_inicio as string,",
				"          fecha_fin as string,",
				"          numero as string,",
				"          imei as string,",
				"          rbs_utilizada as string,",
				"          celda as string,",
				"          latitud_longitud as string,",
				"          subidos as string,",
				"          descargados as string,",
				"          total as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> BronzeDatos",
				"BronzeDatos derive(latitud = toDecimal(concat(split(latitud_longitud, ',')[1], '.', split(latitud_longitud, ',')[2])),",
				"          longitud = toDecimal(concat(split(latitud_longitud, ',')[3], '.', split(latitud_longitud, ',')[4]))) ~> SepararLatLong",
				"SepararLatLong derive(subidos = toInteger(subidos),",
				"          descargados = toInteger(descargados),",
				"          total = toInteger(total)) ~> Convertir",
				"Convertir select(mapColumn(",
				"          fecha_inicio,",
				"          fecha_fin,",
				"          numero,",
				"          imei,",
				"          rbs_utilizada,",
				"          celda,",
				"          subidos,",
				"          descargados,",
				"          total,",
				"          latitud,",
				"          longitud",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> BorrarColumnasViejas",
				"BorrarColumnasViejas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          fecha_inicio as timestamp,",
				"          fecha_fin as timestamp,",
				"          numero as string,",
				"          imei as string,",
				"          rbs_utilizada as string,",
				"          celda as string,",
				"          latitud as decimal(18,0),",
				"          longitud as decimal(18,0),",
				"          subidos as integer,",
				"          descargados as integer,",
				"          total as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> silverDatos"
			]
		}
	}
}